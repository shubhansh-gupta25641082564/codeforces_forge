import java.io.*;import java.util.*;Â public class Main {    static class FastIn {        private final InputStream in;        private final byte[] buf = new byte[1 << 16];        private int ptr = 0, len = 0;        FastIn(InputStream is) { in = is; }        private int read() throws IOException {            if (ptr >= len) {                len = in.read(buf);                ptr = 0;                if (len <= 0) return -1;            }            return buf[ptr++];        }        long nextLong() throws IOException {            int c; do c = read(); while (c <= 32);            long sgn = 1; if (c == '-') { sgn = -1; c = read(); }            long x = 0;            while (c > 32) { x = x * 10 + (c - '0'); c = read(); }            return x * sgn;        }        int nextInt() throws IOException { return (int) nextLong(); }    }    public static void main(String[] args) throws Exception {        FastIn in = new FastIn(System.in);        StringBuilder out = new StringBuilder();        int t = in.nextInt();        while (t-- > 0) {            int n = in.nextInt();            long x = in.nextLong();            long[] a = new long[n];            for (int i = 0; i < n; i++) a[i] = in.nextLong();            Arrays.sort(a);            int i = 0, j = n - 1;            long rem = 0, bonus = 0;            long[] seq = new long[n];            int p = 0;            while (i <= j) {                if (rem + a[j] >= x) {                    seq[p++] = a[j];                    bonus += a[j];                    rem = rem + a[j] - x;                    j--;                } else {                    seq[p++] = a[i];                    rem += a[i];                    i++;                }            }            out.append(bonus).append('\n');            for (int k = 0; k < n; k++) {                if (k > 0) out.append(' ');                out.append(seq[k]);            }            out.append('\n');        }        System.out.print(out.toString());    }}