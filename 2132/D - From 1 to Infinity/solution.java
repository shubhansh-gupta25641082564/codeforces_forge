import java.io.*;import java.util.*;public class Main {    static long sumDigitsUpTo(long x) {        if (x <= 0) return 0L;        long res = 0L;        for (long pow = 1; pow <= x; pow *= 10) {            long next = pow * 10;            long higher = x / next;            int cur = (int)((x / pow) % 10);            long lower = x % pow;            res += higher * 45L * pow;            res += (long)cur * (cur - 1L) / 2L * pow;            res += (long)cur * (lower + 1L);        }        return res;    }Â     public static void main(String[] args) throws Exception {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int t = Integer.parseInt(br.readLine().trim());        StringBuilder sb = new StringBuilder();        while (t-- > 0) {            long k = Long.parseLong(br.readLine().trim());            long ans = 0L;            long len = 1L;            long pow10 = 1L;            while (k > 0) {                long count = 9L * pow10;                long blockDigits = count * len;                if (k >= blockDigits) {                    long L = pow10;                    long R = pow10 * 10L - 1L;                    ans += sumDigitsUpTo(R) - sumDigitsUpTo(L - 1L);                    k -= blockDigits;                } else {                    long full = k / len;                    long rem = k % len;                    if (full > 0) {                        long L = pow10;                        long R = pow10 + full - 1L;                        ans += sumDigitsUpTo(R) - sumDigitsUpTo(L - 1L);                    }                    if (rem > 0) {                        long nextNum = pow10 + full;                        String s = Long.toString(nextNum);                        for (int i = 0; i < (int)rem; ++i) ans += s.charAt(i) - '0';                    }                    k = 0;                }                len++;                pow10 *= 10L;            }            sb.append(ans).append('\n');        }        System.out.print(sb.toString());    }}