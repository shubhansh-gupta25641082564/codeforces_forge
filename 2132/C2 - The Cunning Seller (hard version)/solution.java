import java.io.*;import java.util.*;Â public class Main {    public static void main(String[] args) throws Exception {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int T = Integer.parseInt(br.readLine().trim());        long[] cost = new long[40];        long c = 3;        long cnt = 1;        for (int i = 0; i < cost.length; i++) {            cost[i] = c;            c = 3 * c + cnt;            cnt *= 3;        }        StringBuilder sb = new StringBuilder();        while (T-- > 0) {            StringTokenizer st = new StringTokenizer(br.readLine());            long n = Long.parseLong(st.nextToken());            long k = Long.parseLong(st.nextToken());            ArrayList<Long> tr = new ArrayList<>();            long tmp = n;            long minK = 0;            while (tmp > 0) {                long d = tmp % 3;                tr.add(d);                minK += d;                tmp /= 3;            }            if (tr.isEmpty()) tr.add(0L);            if (minK > k) {                sb.append("-1\n");                continue;            }            long spare = k - minK;            long splits = spare / 2;            for (int i = tr.size() - 1; i >= 1 && splits > 0; --i) {                long cur = tr.get(i);                if (cur <= splits) {                    long add = cur * 3;                    tr.set(i - 1, tr.get(i - 1) + add);                    splits -= cur;                    tr.set(i, 0L);                } else {                    long add = splits * 3;                    tr.set(i - 1, tr.get(i - 1) + add);                    tr.set(i, cur - splits);                    splits = 0;                    break;                }            }            long ans = 0;            for (int i = 0; i < tr.size(); ++i) ans += cost[i] * tr.get(i);            sb.append(ans).append('\n');        }        System.out.print(sb.toString());    }}