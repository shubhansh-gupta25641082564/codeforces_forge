import java.io.*;import java.util.*; public class Main {    static class FastScanner {        private final InputStream in;        private final byte[] buffer = new byte[1 << 16];        private int ptr = 0, len = 0;        FastScanner(InputStream is) { in = is; }        private int read() throws IOException {            if (ptr >= len) {                len = in.read(buffer);                ptr = 0;                if (len <= 0) return -1;            }            return buffer[ptr++];        }        int nextInt() throws IOException {            int c;            while ((c = read()) <= ' ') if (c == -1) return Integer.MIN_VALUE;            int sign = 1;            if (c == '-') { sign = -1; c = read(); }            int val = 0;            while (c > ' ') {                val = val * 10 + (c - '0');                c = read();            }            return val * sign;        }    }     public static void main(String[] args) throws Exception {        FastScanner fs = new FastScanner(System.in);        StringBuilder sb = new StringBuilder();        int t = fs.nextInt();        while (t-- > 0) {            int n = fs.nextInt();            ArrayList<Integer>[] g = new ArrayList[n+1];            for (int i = 1; i <= n; i++) g[i] = new ArrayList<>();            int[] deg = new int[n+1];            for (int i = 0; i < n-1; i++) {                int u = fs.nextInt();                int v = fs.nextInt();                g[u].add(v);                g[v].add(u);                deg[u]++; deg[v]++;            }            if (n <= 3) {                sb.append(0).append('\n');                continue;            }            int leaves = 0;            for (int i = 1; i <= n; i++) if (deg[i] == 1) leaves++;            int mx = 0;            for (int u = 1; u <= n; u++) {                int cnt = 0;                for (int v : g[u]) if (deg[v] == 1) cnt++;                if (cnt > mx) mx = cnt;            }            sb.append(leaves - mx).append('\n');        }        System.out.print(sb.toString());    }}