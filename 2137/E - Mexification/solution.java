import java.io.*;import java.util.*; public class Main {    static final class FastScanner {        private final InputStream in = System.in;        private final byte[] buffer = new byte[1 << 16];        private int ptr = 0, len = 0;        private int read() throws IOException {            if (ptr >= len) {                len = in.read(buffer);                ptr = 0;                if (len <= 0) return -1;            }            return buffer[ptr++];        }        int nextInt() throws IOException {            int c;            while ((c = read()) <= 32) if (c == -1) return Integer.MIN_VALUE;            int sign = 1;            if (c == '-') { sign = -1; c = read(); }            int val = 0;            while (c > 32) {                val = val * 10 + (c - '0');                c = read();            }            return val * sign;        }        long nextLong() throws IOException {            int c;            while ((c = read()) <= 32) if (c == -1) return Long.MIN_VALUE;            int sign = 1;            if (c == '-') { sign = -1; c = read(); }            long val = 0;            while (c > 32) {                val = val * 10 + (c - '0');                c = read();            }            return val * sign;        }    }     public static void main(String[] args) throws Exception {        FastScanner fs = new FastScanner();        StringBuilder out = new StringBuilder();        int t = fs.nextInt();        while (t-- > 0) {            int n = fs.nextInt();            long k = fs.nextLong();            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = fs.nextInt();             if (k == 0) {                long s = 0;                for (int v : a) s += v;                out.append(s).append('\n');                continue;            }             int limit;            if (k == 1) limit = 1;            else if (k == 2) limit = 2;            else limit = (k % 2 == 0) ? 2 : 3;             for (int it = 0; it < limit; it++) {                int[] freq = new int[n + 2];                for (int v : a) if (v >= 0 && v <= n) freq[v]++;                int mex = 0;                while (mex <= n && freq[mex] > 0) mex++;                 int[] b = new int[n];                boolean changed = false;                for (int i = 0; i < n; i++) {                    int val = a[i];                    if (val >= mex || freq[val] > 1) b[i] = mex;                    else b[i] = val;                    if (b[i] != a[i]) changed = true;                }                a = b;                if (!changed) break;            }             long sum = 0;            for (int v : a) sum += v;            out.append(sum).append('\n');        }        System.out.print(out.toString());    }}