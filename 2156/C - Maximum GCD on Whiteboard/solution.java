import java.io.*;import java.util.*; public class MainA {    static class FastIn {        private final InputStream in;        private final byte[] buf = new byte[1 << 16];        private int p = 0, l = 0;        FastIn(InputStream is){ in = is; }        private int r() throws IOException {            if (p >= l) { l = in.read(buf); p = 0; if (l <= 0) return -1; }            return buf[p++];        }        int nextInt() throws IOException {            int c, s = 1, x = 0;            do c = r(); while (c <= 32);            if (c == '-') { s = -1; c = r(); }            while (c > 32) { x = x * 10 + (c - '0'); c = r(); }            return x * s;        }    }     public static void main(String[] args) throws Exception {        FastIn in = new FastIn(System.in);        StringBuilder out = new StringBuilder();        int t = in.nextInt();        while (t-- > 0) {            int n = in.nextInt();            int k = in.nextInt();            int[] cnt = new int[n + 1];            for (int i = 0; i < n; i++) {                int x = in.nextInt();                if (x <= n) cnt[x]++;            }            int[] pref = new int[n + 1];            for (int i = 1; i <= n; i++) pref[i] = pref[i - 1] + cnt[i];            int ans = 1;            for (int d = n; d >= 1; d--) {                int upto = (int)Math.min(n, 4L * d - 1);                int total = pref[upto];                int mult = 0;                for (int m = d; m <= upto; m += d) mult += cnt[m];                int bad = total - mult;                if (bad <= k) { ans = d; break; }            }            out.append(ans).append('\n');        }        System.out.print(out);    }}