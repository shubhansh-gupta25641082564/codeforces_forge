import java.io.*;import java.util.*; public class Main {    static final InputStream in = System.in;    static final byte[] buf = new byte[1 << 16];    static int ptr = 0, len = 0;     static int read() throws IOException {        if (ptr >= len) {            len = in.read(buf);            ptr = 0;            if (len <= 0) return -1;        }        return buf[ptr++];    }    static int nextInt() throws IOException {        int c, sgn = 1, x = 0;        do c = read(); while (c <= 32);        if (c == '-') { sgn = -1; c = read(); }        while (c > 32) { x = x * 10 + c - '0'; c = read(); }        return x * sgn;    }    static String next() throws IOException {        int c;        do c = read(); while (c <= 32);        StringBuilder sb = new StringBuilder();        while (c > 32) { sb.append((char)c); c = read(); }        return sb.toString();    }     static long cost(char[] s, char ch) {        int n = s.length;        ArrayList<Integer> pos = new ArrayList<>();        for (int i = 0; i < n; i++) if (s[i] == ch) pos.add(i);        int m = pos.size();        if (m <= 1) return 0;        long[] adj = new long[m];        for (int i = 0; i < m; i++) adj[i] = pos.get(i) - i;        long med = adj[m >> 1];        long sum = 0;        for (int i = 0; i < m; i++) sum += Math.abs(adj[i] - med);        return sum;    }     public static void main(String[] args) throws Exception {        StringBuilder out = new StringBuilder();        int t = nextInt();        while (t-- > 0) {            int n = nextInt();            char[] s = next().toCharArray();            long ans = Math.min(cost(s, 'a'), cost(s, 'b'));            out.append(ans).append('\n');        }        System.out.print(out.toString());    }}